name: Build package

on:
  workflow_dispatch:
  push:
    branches: [ main ]

defaults:
  run:
    shell: bash

jobs:
  buld_sdist:
    name: Build sdist
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: dependencies
        run: |
          python -m pip install -U pip build
          pip install -r requirements.txt

      - name: build
        id: build
        run: |
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*

  build_wheels:
    name: Build wheels ${{ matrix.python }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      matrix:
        buildplat:
          # os, platform
          - [ windows-2022, win_amd64 ]
          - [ windows-2022, win32 ]
          - [ ubuntu-latest, manylinux_x86_64 ]
          - [ ubuntu-latest, musllinux_x86_64 ]
        python: [ cp37, cp38, cp39, cp310, cp311, cp312, cp313 ]
        exclude:
          - buildplat: [ windows-2022, win32 ]
            python: pp311
          - buildplat: [ ubuntu-latest, musllinux_x86_64 ]
            python: pp311

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup MSVC (32-bit)
        if: ${{ matrix.buildplat[1] == 'win32' }}
        uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: 'x86'

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.3
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
          path: ./wheelhouse/*.whl

  pypi_publish:
    runs-on: ubuntu-latest
    needs:
      - buld_sdist
      - build_wheels
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/pyicer

    steps:
      - name: Get artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist/
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
